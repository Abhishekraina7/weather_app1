import 'package:flutter/material.dart';import 'package:geolocator/geolocator.dart';import 'package:weather_app1/services/location.dart';import 'package:http/http.dart'  ;class LoadingScreen extends StatefulWidget {  const LoadingScreen({super.key});  @override  LoadingScreenState createState() => LoadingScreenState();}class LoadingScreenState extends State<LoadingScreen> {  void initState() {    super.initState();    _checkLocationStatus();     getLocation(); // Putting this function into this function will give output wihthout prompting the user to click anywhere(One the permission is given)  }late double ?longitude;  Future<void> _checkLocationStatus() async {    bool serviceEnabled;    LocationPermission permission;    // Check if location service is enabled    serviceEnabled = await Geolocator.isLocationServiceEnabled();    if(!serviceEnabled)    {      _showLocationServiceDialog();    }    // Request location permission    permission = await Geolocator.requestPermission();    if (permission == LocationPermission.denied) {      // Handle case when permission is denied      _showPermissionDeniedDialog();    }    if (permission == LocationPermission.deniedForever) {      // Handle case when permission is permanently denied      _showPermissionDeniedForeverDialog();    }  }  void _showLocationServiceDialog() {    showDialog(      context: context,      builder: (context) => AlertDialog(        title: const Text('Location Services Disabled'),        content: const Text('Please enable location services to use this app.'),        actions: [          TextButton(            onPressed: () {              Navigator.pop(context);              // Open device settings to enable location services              Geolocator.openLocationSettings();            },            child: const Text('Open Settings'),          ),        ],      ),    );  }  void _showPermissionDeniedDialog() {    showDialog(      context: context,      builder: (context) => AlertDialog(        title: const Text('Location Permission Denied'),        content: const Text('Please grant location permission to use this app.'),        actions: [          TextButton(            onPressed: () {              Navigator.pop(context);              // Request location permission again              _checkLocationStatus();            },            child: const Text('Retry'),          ),        ],      ),    );  }  void _showPermissionDeniedForeverDialog() {    showDialog(      context: context,      builder: (context) => AlertDialog(        title: const Text('Location Permission Denied'),        content: const Text('Please enable location permission in your device settings.'),        actions: [          TextButton(            onPressed: () {              Navigator.pop(context);              // Open app settings to enable location permission              Geolocator.openAppSettings();            },            child: const Text('Open App Settings'),          ),        ],      ),    );  }  Future<void> getLocation()  async {       Location location = Location();       await location.getCurrentposition();       print(location.longitude);       print(location.latitude);  }  Future<void> getData()async  {    var url = Uri.parse('https://api.openweathermap.org/data/2.5/weather?lat=44.34&lon=10.99&appid=d8444163ab4db3f0bb85d3ba9b1d931e');   // Remember  All APIs which previously allowed a String or Uri to be passed now require a Uri.    Response response = await get(url);   print(response.body);  }    @override  Widget build(BuildContext context) {    getData();    return  Scaffold();  }}